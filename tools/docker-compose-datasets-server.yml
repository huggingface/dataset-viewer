version: "3.9"
services:
  reverse-proxy:
    image: ${IMAGE_REVERSE_PROXY?IMAGE_REVERSE_PROXY env var must be provided}
    volumes:
      - ../chart/nginx-templates/:/etc/nginx/templates:ro
      - assets:${CACHE_ASSETS_DIRECTORY-/assets}:ro
      - ../chart/static-files/openapi.json:/static-files/openapi.json:ro
    ports:
      - "${PORT_REVERSE_PROXY-8000}:80"
    environment:
      ASSETS_DIRECTORY: ${CACHE_ASSETS_DIRECTORY-/assets}
      HOST: localhost
      PORT: 80
      URL_ADMIN: http://admin:${ADMIN_UVICORN_PORT-8081}
      URL_API: http://api:${API_UVICORN_PORT-8080}
    depends_on:
      - api
      - admin
  admin:
    # build:
    #   context: ..
    #   dockerfile: services/admin/Dockerfile
    image: ${IMAGE_SERVICE_ADMIN?IMAGE_SERVICE_ADMIN env var must be provided}
    extends:
      file: docker-compose-base.yml
      service: common
    environment:
      # service
      ADMIN_HF_ORGANIZATION: ${ADMIN_HF_ORGANIZATION-}
      ADMIN_CACHE_REPORTS_NUM_RESULTS: ${ADMIN_CACHE_REPORTS_NUM_RESULTS-100}
      ADMIN_HF_WHOAMI_PATH: ${ADMIN_HF_WHOAMI_PATH-/api/whoami-v2}
      ADMIN_MAX_AGE: ${ADMIN_MAX_AGE-10}
      # prometheus
      PROMETHEUS_MULTIPROC_DIR: ${PROMETHEUS_MULTIPROC_DIR-}
      # uvicorn
      ADMIN_UVICORN_HOSTNAME: 0.0.0.0 # required for docker compose
      ADMIN_UVICORN_NUM_WORKERS: ${ADMIN_UVICORN_NUM_WORKERS-2}
      ADMIN_UVICORN_PORT: ${ADMIN_UVICORN_PORT-8081}
    depends_on:
      - mongodb
    restart: always
    ports:
      # for debug
      - ${ADMIN_UVICORN_PORT-8081}:${ADMIN_UVICORN_PORT-8081}
  api:
    # build:
    #   context: ..
    #   dockerfile: services/api/Dockerfile
    image: ${IMAGE_SERVICE_API?IMAGE_SERVICE_API env var must be provided}
    volumes:
      - assets:${CACHE_ASSETS_DIRECTORY-/assets}:ro
    extends:
      file: docker-compose-base.yml
      service: common
    environment:
      # service
      API_HF_AUTH_PATH: ${API_HF_AUTH_PATH-/api/datasets/%s/auth-check}
      API_MAX_AGE_LONG: ${API_MAX_AGE_LONG-120}
      API_MAX_AGE_SHORT: ${API_MAX_AGE_SHORT-10}
      # prometheus
      PROMETHEUS_MULTIPROC_DIR: ${PROMETHEUS_MULTIPROC_DIR-}
      # uvicorn
      API_UVICORN_HOSTNAME: 0.0.0.0 # required for docker compose
      API_UVICORN_NUM_WORKERS: ${API_UVICORN_NUM_WORKERS-2}
      API_UVICORN_PORT: ${API_UVICORN_PORT-8080}
    ports:
      # for debug
      - ${API_UVICORN_PORT-8080}:${API_UVICORN_PORT-8080}
    depends_on:
      - mongodb
    restart: unless-stopped
  worker-splits:
    # build:
    #   context: ..
    #   dockerfile: workers/splits/Dockerfile
    image: ${IMAGE_WORKER_SPLITS?IMAGE_WORKER_SPLITS env var must be provided}
    volumes:
      - splits-datasets-cache:${HF_DATASETS_CACHE-/datasets-cache}:rw
      - splits-modules-cache:${HF_DATASETS_CACHE-/modules-cache}:rw
      - splits-numba-cache:${NUMBA_CACHE_DIR-/numba-cache}:rw
    extends:
      file: docker-compose-base.yml
      service: datasets-worker
    environment:
      HF_ENDPOINT: ${COMMON_HF_ENDPOINT-https://huggingface.co} # see https://github.com/huggingface/datasets/pull/5196#issuecomment-1322191411
      HF_DATASETS_CACHE: ${HF_DATASETS_CACHE-/datasets-cache}
      HF_MODULES_CACHE: ${HF_MODULES_CACHE-/modules-cache}
      NUMBA_CACHE_DIR: ${NUMBA_CACHE_DIR-/numba-cache}
    depends_on:
      - mongodb
    restart: always
  worker-first-rows:
    # build:
    #   context: ..
    #   dockerfile: workers/first-rows/Dockerfile
    image: ${IMAGE_WORKER_FIRST_ROWS?IMAGE_WORKER_FIRST_ROWS env var must be provided}
    volumes:
      - first-rows-datasets-cache:${HF_DATASETS_CACHE-/datasets-cache}:rw
      - first-rows-modules-cache:${HF_DATASETS_CACHE-/modules-cache}:rw
      - first-rows-numba-cache:${NUMBA_CACHE_DIR-/numba-cache}:rw
    extends:
      file: docker-compose-base.yml
      service: datasets-worker
    environment:
      FIRST_ROWS_FALLBACK_MAX_DATASET_SIZE: ${FIRST_ROWS_FALLBACK_MAX_DATASET_SIZE-100_000_000}
      FIRST_ROWS_MAX_BYTES: ${FIRST_ROWS_MAX_BYTES-1_000_000}
      FIRST_ROWS_MAX_NUMBER: ${FIRST_ROWS_MAX_NUMBER-100}
      FIRST_ROWS_MIN_CELL_BYTES: ${FIRST_ROWS_MIN_CELL_BYTES-100}
      FIRST_ROWS_MIN_NUMBER: ${FIRST_ROWS_MIN_NUMBER-10}
    depends_on:
      - mongodb
    restart: always
  mongodb:
    image: mongo
    volumes:
      - mongo:/data/db:rw
    ports:
      # for debug
      - "${MONGO_PORT-27017}:27017"
volumes:
  assets:
  mongo:
  splits-datasets-cache:
  splits-modules-cache:
  splits-numba-cache:
  first-rows-datasets-cache:
  first-rows-modules-cache:
  first-rows-numba-cache:
