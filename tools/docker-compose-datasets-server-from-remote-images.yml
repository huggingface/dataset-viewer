version: "3.9"
services:
  reverse-proxy:
    image: ${SERVICE_REVERSE_PROXY_DOCKER_IMAGE?SERVICE_REVERSE_PROXY_DOCKER_IMAGE env var must be provided}
    volumes:
      - ../infra/charts/datasets-server/nginx-templates/:/etc/nginx/templates:ro
      - reverse-proxy-cache:/nginx-cache
      - assets:/assets:ro
    ports:
      - "${SERVICE_REVERSE_PROXY_PORT-8000}:80"
    environment:
      ASSETS_DIRECTORY: /assets
      CACHE_DIRECTORY: /nginx-cache
      CACHE_INACTIVE: 24h
      CACHE_MAX_SIZE: 1g
      CACHE_ZONE_SIZE: 50m
      HOST: localhost
      PORT: 80
      TARGET_URL: http://api:8080
    depends_on:
      - api
  api:
    image: ${SERVICE_API_DOCKER_IMAGE?SERVICE_API_DOCKER_IMAGE env var must be provided}
    volumes:
      - assets:/assets:ro
    environment:
      APP_HOSTNAME: 0.0.0.0
      APP_NUM_WORKERS: 1
      APP_PORT: 8080
      ASSETS_DIRECTORY: "/assets"
      # use shorter cache durations for the e2e tests
      MAX_AGE_SHORT_SECONDS: 1
      MAX_AGE_LONG_SECONDS: 2
      MONGO_URL: "mongodb://mongodb"
    ports:
      # for debug
      - ${SERVICE_API_PORT-8080}:8080
    depends_on:
      - mongodb
    restart: unless-stopped
  datasets-worker:
    image: ${SERVICE_DATASETS_WORKER_DOCKER_IMAGE?SERVICE_DATASETS_WORKER_DOCKER_IMAGE env var must be provided}
    volumes:
      - assets:/assets:rw
    environment:
      ASSETS_DIRECTORY: "/assets"
      MONGO_URL: "mongodb://mongodb"
      WORKER_SLEEP_SECONDS: "1"
      WORKER_QUEUE: "datasets"
    depends_on:
      - mongodb
    restart: always
  splits-worker:
    image: ${SERVICE_SPLITS_WORKER_DOCKER_IMAGE?SERVICE_SPLITS_WORKER_DOCKER_IMAGE env var must be provided}
    volumes:
      - assets:/assets:rw
    environment:
      ASSETS_DIRECTORY: "/assets"
      MONGO_URL: "mongodb://mongodb"
      WORKER_SLEEP_SECONDS: "1"
      WORKER_QUEUE: "splits"
    depends_on:
      - mongodb
    restart: always
  admin:
    image: ${SERVICE_ADMIN_DOCKER_IMAGE?SERVICE_ADMIN_DOCKER_IMAGE env var must be provided}
    environment:
      APP_HOSTNAME: 0.0.0.0
      APP_NUM_WORKERS: 1
      APP_PORT: 8081
      ASSETS_DIRECTORY: "/assets"
      MONGO_URL: "mongodb://mongodb"
    depends_on:
      - mongodb
    restart: always
    ports:
      # for debug
      - ${SERVICE_ADMIN_PORT-8081}:8081
  mongodb:
    image: mongo
    volumes:
      - mongo:/data/db:rw
      # TODO: authentication, healthcheck, expose?, migrations?
    ports:
      # for debug
      - "${MONGO_PORT-27017}:27017"
volumes:
  assets:
  mongo:
  reverse-proxy-cache:
