version: "3.9"
services:
  reverse-proxy:
    image: nginx:1.20
    volumes:
      - ../infra/charts/datasets-server/nginx-templates/:/etc/nginx/templates:ro
      - reverse-proxy-cache:/nginx-cache
      - assets:/assets:ro
      - ../infra/charts/datasets-server/static-files/openapi.json:/static-files/openapi.json:ro
    ports:
      - "${SERVICE_REVERSE_PROXY_PORT-8000}:80"
    environment:
      - ASSETS_DIRECTORY=/assets
      - CACHE_DIRECTORY=/nginx-cache
      - CACHE_INACTIVE=24h
      - CACHE_MAX_SIZE=1g
      - CACHE_ZONE_SIZE=50m
      - HOST=localhost
      - PORT=80
      - TARGET_URL=http://api:8080
    depends_on:
      api:
        condition: service_started
  api:
    build:
      context: ..
      dockerfile: services/api/Dockerfile
    volumes:
      - assets:/assets:ro
    environment:
      APP_HOSTNAME: 0.0.0.0
      APP_NUM_WORKERS: 1
      APP_PORT: 8080
      ASSETS_DIRECTORY: "/assets"
      MONGO_URL: "mongodb://mongodb"
    ports:
      # for debug
      - ${SERVICE_API_PORT-8080}:8080
    depends_on:
      mongodb:
        condition: service_started
    restart: unless-stopped
  datasets-worker:
    build:
      context: ..
      dockerfile: ./services/worker/Dockerfile
    volumes:
      - assets:/assets:rw
      - datasets-cache:/datasets-cache:rw
    environment:
      ASSETS_DIRECTORY: "/assets"
      HF_DATASETS_CACHE: "/datasets-cache"
      MONGO_URL: "mongodb://mongodb"
      WORKER_QUEUE: "datasets"
    depends_on:
      mongodb:
        condition: service_started
    restart: always
  splits-worker:
    build:
      context: ..
      dockerfile: ./services/worker/Dockerfile
    volumes:
      - assets:/assets:rw
      - datasets-cache:/datasets-cache:rw
    environment:
      ASSETS_DIRECTORY: "/assets"
      HF_DATASETS_CACHE: "/datasets-cache"
      MONGO_URL: "mongodb://mongodb"
      WORKER_QUEUE: "splits"
    depends_on:
      mongodb:
        condition: service_started
    restart: always
  admin:
    build:
      context: ..
      dockerfile: ./services/admin/Dockerfile
    environment:
      APP_HOSTNAME: 0.0.0.0
      APP_NUM_WORKERS: 1
      APP_PORT: 8081
      ASSETS_DIRECTORY: "/assets"
      MONGO_URL: "mongodb://mongodb"
    ports:
      # for debug
      - ${SERVICE_ADMIN_PORT-8081}:8081
    depends_on:
      mongodb:
        condition: service_started
    restart: always
  mongodb:
    image: mongo
    volumes:
      - mongo:/data/db:rw
      # TODO: authentication, healthcheck, expose?, migrations?
    ports:
      # for debug
      - "${MONGO_PORT-27017}:27017"
volumes:
  assets:
  datasets-cache:
  mongo:
  reverse-proxy-cache:
