# SPDX-License-Identifier: Apache-2.0
# Copyright 2022 The HuggingFace Authors.

name: Launch end-to-end tests
on:
  workflow_call:
env:
  python-version: 3.9.15
  poetry-version: 1.3.2
  # required to get access to use a cached poetry venv in "/home/runner/.cache/pypoetry/virtualenvs"
  POETRY_VIRTUALENVS_IN_PROJECT: false
  working-directory: e2e
jobs:
  e2e-tests:
    defaults:
      run:
        shell: bash
        working-directory: e2e
    runs-on: "ubuntu-latest"
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      # -
      #   name: Build and push
      #   uses: docker/bake-action@v2.3.0
      #   with:
      #     push: false
      #     load: true
      #     files: |
      #       docker-compose-datasets-server.yml
      #     set: |
      #       *.cache-from=type=gha
      #       *.cache-to=type=gha
      #     workdir: ./tools
      - 
        name: Build and push Docker image 1
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./services/admin/Dockerfile
          push: false
          load: true
          tags: admin:ci
          # see https://github.com/docker/build-push-action/blob/master/docs/advanced/cache.md#registry-cache
          cache-from: type=gha
          cache-to: type=gha,mode=max
          # gives:
          # /usr/bin/docker buildx build --cache-from type=gha --cache-to type=gha,mode=max --file ./services/admin/Dockerfile --iidfile /tmp/docker-build-push-0INfdw/iidfile --load --metadata-file /tmp/docker-build-push-0INfdw/metadata-file .
      - 
        name: Build and push Docker image 2
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./services/api/Dockerfile
          push: false
          load: true
          tags: api:ci
          # see https://github.com/docker/build-push-action/blob/master/docs/advanced/cache.md#registry-cache
          cache-from: type=gha
          cache-to: type=gha,mode=max
          # gives:
          # /usr/bin/docker buildx build --cache-from type=gha --cache-to type=gha,mode=max --file ./services/admin/Dockerfile --iidfile /tmp/docker-build-push-0INfdw/iidfile --load --metadata-file /tmp/docker-build-push-0INfdw/metadata-file .
      - 
        name: Build and push Docker image 3
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./workers/datasets_based/Dockerfile
          push: false
          load: true
          tags: datasets_based:ci
          # see https://github.com/docker/build-push-action/blob/master/docs/advanced/cache.md#registry-cache
          cache-from: type=gha
          cache-to: type=gha,mode=max
          # gives:
          # /usr/bin/docker buildx build --cache-from type=gha --cache-to type=gha,mode=max --file ./services/admin/Dockerfile --iidfile /tmp/docker-build-push-0INfdw/iidfile --load --metadata-file /tmp/docker-build-push-0INfdw/metadata-file .
      -
        name: Launch the services (the images should have been build in the previous step)
        env:
          WORKER_SLEEP_TIME: "1"
          # hard coded, see e2e/tests/fixtures/hub.py
          COMMON_HF_ENDPOINT: "https://hub-ci.huggingface.co"
          COMMON_HF_TOKEN: "hf_app_datasets-server_token"
          PARQUET_AND_DATASET_INFO_COMMITTER_HF_TOKEN: "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"
          FIRST_ROWS_MAX_NUMBER: "4"
          PORT_REVERSE_PROXY: "8000"
          PROMETHEUS_MULTIPROC_DIR: "/tmp"
          API_UVICORN_NUM_WORKERS: "2"
          API_UVICORN_PORT: "8080"
          ADMIN_UVICORN_NUM_WORKERS: "2"
          ADMIN_UVICORN_PORT: "8081"
          COMMON_LOG_LEVEL: "DEBUG"
        run: docker compose -f docker-compose-datasets-server.yml up -d
        working-directory: ./tools
      # -
      #   name: Install poetry
      #   run: pipx install poetry==${{ env.poetry-version }}
      # -
      #   name: Use Python
      #   uses: actions/setup-python@v4
      #   with:
      #     python-version: ${{ env.python-version }}
      #     cache: 'poetry'
      #     cache-dependency-path: |
      #       ${{ env.working-directory }}/poetry.lock
      # -
      #   name: Install dependencies
      #   run: |
      #     poetry env use "${{ env.python-version }}"
      #     poetry install
      # -
      #   name: End-to-end tests
      #   env:
      #     QUEUE_SLEEP_TIME: "1"
      #     # hard coded, see e2e/tests/fixtures/hub.py
      #     COMMON_HF_ENDPOINT: "https://hub-ci.huggingface.co"
      #     COMMON_HF_TOKEN: "hf_app_datasets-server_token"
      #     PARQUET_AND_DATASET_INFO_COMMITTER_HF_TOKEN: "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"
      #     FIRST_ROWS_MAX_NUMBER: "4"
      #     PORT_REVERSE_PROXY: "8000"
      #     PROMETHEUS_MULTIPROC_DIR: "/tmp"
      #     API_UVICORN_NUM_WORKERS: "2"
      #     API_UVICORN_PORT: "8080"
      #     ADMIN_UVICORN_NUM_WORKERS: "2"
      #     ADMIN_UVICORN_PORT: "8081"
      #     COMMON_LOG_LEVEL: "DEBUG"
      #   run: |
      #     poetry run python -m pytest -vv -x tests
