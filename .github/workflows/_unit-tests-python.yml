# SPDX-License-Identifier: Apache-2.0
# Copyright 2022 The HuggingFace Authors.

name: Launch Python unit tests
on:
  workflow_call:
    inputs:
      working-directory:
        required: true
        type: string
env:
  # required to get access to use a cached poetry venv in "/home/runner/.cache/pypoetry/virtualenvs"
  POETRY_VIRTUALENVS_IN_PROJECT: false
  mongo-port: "27017"
  mongo-version: "6.0.9"
  python-version: "3.9.15"
  poetry-version: "1.4.2"
  replicaset: "rs0"
jobs:
  unit-tests:
    defaults:
      run:
        shell: bash
        working-directory: ${{ inputs.working-directory }}
    runs-on: "ubuntu-latest"
    steps:
      - uses: actions/checkout@v4
      - name: Install poetry
        run: pipx install poetry==${{ env.poetry-version }}
      - name: Use Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.python-version }}
          cache: "poetry"
          cache-dependency-path: |
            ${{ inputs.working-directory }}/poetry.lock
      - name: Install packages
        run: sudo apt update; sudo apt install -y libicu-dev ffmpeg libavcodec-extra libsndfile1 llvm pkg-config poppler-utils
      - name: Install dependencies
        # "poetry env use" is required: https://github.com/actions/setup-python/issues/374#issuecomment-1088938718
        run: |
          poetry env use "${{ env.python-version }}"
          poetry install
      - name: launch mongo
        env:
          MONGO_PORT: ${{ env.mongo-port }}
          MONGO_REPLICASET: ${{ env.replicaset }}
        run: docker compose -f docker-compose-mongo.yml up -d
        working-directory: ./tools
      - name: 🍃 Install mongosh
        run: |
          sudo apt-get update
          sudo apt-get install -y wget gnupg
          wget -qO - https://www.mongodb.org/static/pgp/server-6.0.asc | sudo apt-key add -
          echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu jammy/mongodb-org/6.0 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-6.0.list
          sudo apt-get update
          sudo apt-get install -y mongodb-mongosh
      - name: Set up replica set (required by sse-api)
        run: echo "rs.initiate({_id:'${{ env.replicaset }}',version:1,members:[{_id:0,host:'localhost:${{ env.mongo-port }}'}]})" | mongosh --port ${{ env.mongo-port }} --quiet
      - name: Run unit tests
        env:
          CACHE_MONGO_URL: mongodb://localhost:${{ env.mongo-port }}
          QUEUE_MONGO_URL: mongodb://localhost:${{ env.mongo-port }}
          METRICS_MONGO_URL: mongodb://localhost:${{ env.mongo-port }}
          DATABASE_MIGRATIONS_MONGO_URL: mongodb://localhost:${{ env.mongo-port }}
          CI_SPAWNING_TOKEN: ${{ secrets.CI_SPAWNING_TOKEN }}
        run: poetry run python -m pytest -s --cov=./ --cov-report=xml:./coverage.xml --cov-report=term tests
      - name: Prepare codecov flag (slash "/" is not allowed)
        id: remove-slash
        run: |
          dir="${{ inputs.working-directory }}"
          echo "codecov_flag=${dir/\//_}" >> $GITHUB_ENV
      - uses: codecov/codecov-action@v3
        with:
          working-directory: ${{ inputs.working-directory }}
          files: ./coverage.xml
          fail_ci_if_error: false
          flags: ${{ env.codecov_flag }}
